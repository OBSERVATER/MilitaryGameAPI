{
  "api/Global.ChatController.html": {
    "href": "api/Global.ChatController.html",
    "title": "Class ChatController | 兵棋项目API文档",
    "keywords": "Class ChatController Inheritance object ChatController Namespace: Global Assembly: cs.temp.dll.dll Syntax public class ChatController : MonoBehaviour Fields ChatDisplayOutput Declaration public TMP_Text ChatDisplayOutput Field Value Type Description TMP_Text ChatInputField Declaration public TMP_InputField ChatInputField Field Value Type Description TMP_InputField ChatScrollbar Declaration public Scrollbar ChatScrollbar Field Value Type Description Scrollbar"
  },
  "api/Global.DropdownSample.html": {
    "href": "api/Global.DropdownSample.html",
    "title": "Class DropdownSample | 兵棋项目API文档",
    "keywords": "Class DropdownSample Inheritance object DropdownSample Namespace: Global Assembly: cs.temp.dll.dll Syntax public class DropdownSample : MonoBehaviour Methods OnButtonClick() Declaration public void OnButtonClick()"
  },
  "api/Global.EnvMapAnimator.html": {
    "href": "api/Global.EnvMapAnimator.html",
    "title": "Class EnvMapAnimator | 兵棋项目API文档",
    "keywords": "Class EnvMapAnimator Inheritance object EnvMapAnimator Namespace: Global Assembly: cs.temp.dll.dll Syntax public class EnvMapAnimator : MonoBehaviour Fields RotationSpeeds Declaration public Vector3 RotationSpeeds Field Value Type Description Vector3"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | 兵棋项目API文档",
    "keywords": "Namespace Classes ChatController DropdownSample EnvMapAnimator PoolTool"
  },
  "api/Global.PoolTool.html": {
    "href": "api/Global.PoolTool.html",
    "title": "Class PoolTool | 兵棋项目API文档",
    "keywords": "Class PoolTool Inheritance object PoolTool Namespace: Global Assembly: cs.temp.dll.dll Syntax public class PoolTool : MonoBehaviour Fields prefab Declaration public GameObject prefab Field Value Type Description GameObject Methods GetObjectFromPool() 从对象池获取对象 Declaration public GameObject GetObjectFromPool() Returns Type Description GameObject GameObject对象 ReturnObjectFromPool(GameObject) 把对象放回对象池 Declaration public void ReturnObjectFromPool(GameObject obj) Parameters Type Name Description GameObject obj GameObject对象"
  },
  "api/MilitaryGame.CameraMove.html": {
    "href": "api/MilitaryGame.CameraMove.html",
    "title": "Class CameraMove | 兵棋项目API文档",
    "keywords": "Class CameraMove 相机移动相关脚本 Inheritance object CameraMove Namespace: MilitaryGame Assembly: cs.temp.dll.dll Syntax public class CameraMove : MonoBehaviour Methods AdjustPosition(float, float) 移动相机 Declaration public void AdjustPosition(float xDelta, float yDelta) Parameters Type Name Description float xDelta x偏移值 float yDelta y偏移值"
  },
  "api/MilitaryGame.GameController.html": {
    "href": "api/MilitaryGame.GameController.html",
    "title": "Class GameController | 兵棋项目API文档",
    "keywords": "Class GameController 游戏控制脚本 Inheritance object GameController Namespace: MilitaryGame Assembly: cs.temp.dll.dll Syntax public class GameController : MonoBehaviour Fields selectedHexes 存放我们选中的“六角格”的游戏物体 Declaration public static List<GameObject> selectedHexes Field Value Type Description System.Collections.Generic.List<T><GameObject>"
  },
  "api/MilitaryGame.GridDirection.html": {
    "href": "api/MilitaryGame.GridDirection.html",
    "title": "Enum GridDirection | 兵棋项目API文档",
    "keywords": "Enum GridDirection 六角格的六个方向，顺序是从右上角开始顺时针 Namespace: MilitaryGame Assembly: cs.temp.dll.dll Syntax public enum GridDirection Fields Name Description East NorthEast NorthWest SouthEast SouthWest West"
  },
  "api/MilitaryGame.HexGrid.html": {
    "href": "api/MilitaryGame.HexGrid.html",
    "title": "Class HexGrid | 兵棋项目API文档",
    "keywords": "Class HexGrid 格子 Inheritance object HexGrid Namespace: MilitaryGame Assembly: cs.temp.dll.dll Syntax public class HexGrid : MonoBehaviour Fields construction 该格的建筑建筑 Declaration public int construction Field Value Type Description int mapHexElement 六角格信息 Declaration public MapHexElement mapHexElement Field Value Type Description MapHexElement RedBorder 选中框 Declaration public GameObject RedBorder Field Value Type Description GameObject rivers 用来存放河流物体，改变sprite来改变河流 Declaration public List<GameObject> rivers Field Value Type Description System.Collections.Generic.List<T><GameObject> terrain 该格的地形 Declaration public TerrainType terrain Field Value Type Description TerrainType terrainRenderer 地形图片控制 Declaration public SpriteRenderer terrainRenderer Field Value Type Description SpriteRenderer Properties position 地图的坐标 Declaration public Vector2Int position { get; } Property Value Type Description Vector2Int Vector2Int (x,y) Methods GetAdjacentGrid(GridDirection) 根据方向获取相邻格子 Declaration public HexGrid GetAdjacentGrid(GridDirection dir) Parameters Type Name Description GridDirection dir 方向 Returns Type Description HexGrid 格子的数据 GetAdjacentGrids() 获取相邻的所有格子 Declaration public HexGrid[] GetAdjacentGrids() Returns Type Description HexGrid[] 相邻的所有格子数据 GetGridDirection(HexGrid) 获取当前格子相对于其他格子的方向 Declaration public GridDirection GetGridDirection(HexGrid other) Parameters Type Name Description HexGrid other 目标格子 Returns Type Description GridDirection 方向 Remarks 对于这种方法的性能消耗表示存疑 OnSelected() 当此格被选中/取消选中时调用 Declaration public void OnSelected() SetBorderStatus(bool) 设置该格的显示状态，若显示状态与实际显示状态不同以isShow为准 Declaration public void SetBorderStatus(bool isShow) Parameters Type Name Description bool isShow 是否显示 SetMapHexElement(int, int) 设置数据 Declaration public void SetMapHexElement(int x, int y) Parameters Type Name Description int x 横坐标 int y 纵坐标"
  },
  "api/MilitaryGame.html": {
    "href": "api/MilitaryGame.html",
    "title": "Namespace MilitaryGame | 兵棋项目API文档",
    "keywords": "Namespace MilitaryGame Classes CameraMove 相机移动相关脚本 GameController 游戏控制脚本 HexGrid 格子 MapHexElement 把一个六角格的地形、建筑、河流、道路等信息展示出来 River 河流模块 SelectedData 被选中的格子的数据存储单例 Enums GridDirection 六角格的六个方向，顺序是从右上角开始顺时针 RiverType 河流类型 TerrainType 地形"
  },
  "api/MilitaryGame.MapEditor.GeneralPanel.html": {
    "href": "api/MilitaryGame.MapEditor.GeneralPanel.html",
    "title": "Class GeneralPanel | 兵棋项目API文档",
    "keywords": "Class GeneralPanel 总体界面 Inheritance object GeneralPanel Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class GeneralPanel : MonoBehaviour Remarks 左边粉色的那个 Methods CreateMap() 创建地图方法 Declaration public void CreateMap() Remarks 左边粉色的那个 DeleteMap() 清空地图方法 Declaration public void DeleteMap() Remarks 左边粉色的那个 LoadMap() 加载地图方法 Declaration public void LoadMap() Remarks 左边粉色的那个"
  },
  "api/MilitaryGame.MapEditor.html": {
    "href": "api/MilitaryGame.MapEditor.html",
    "title": "Namespace MilitaryGame.MapEditor | 兵棋项目API文档",
    "keywords": "Namespace MilitaryGame.MapEditor Classes GeneralPanel 总体界面 LoadPanel 加载面板 MapData 整个地图的数据结构 MapManager 地图管理器 MapViewContent 加载面板的显示地图信息的地方 RiverPanel Route 道路的组件 RoutePanel 道路面板 SaveLoadSystem 保存加载系统 SavePanel 保存面板 TerrainController 地形控制 TerrainPanel 地形面板 Interfaces ISaveLoadSystem 保存加载系统的接口"
  },
  "api/MilitaryGame.MapEditor.ISaveLoadSystem.html": {
    "href": "api/MilitaryGame.MapEditor.ISaveLoadSystem.html",
    "title": "Interface ISaveLoadSystem | 兵棋项目API文档",
    "keywords": "Interface ISaveLoadSystem 保存加载系统的接口 Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public interface ISaveLoadSystem Methods Load(MapData) 加载地图 Declaration bool Load(MapData mapData) Parameters Type Name Description MapData mapData Returns Type Description bool 是否加载成功 Save(string) 保存地图 Declaration string Save(string fileName = \"\") Parameters Type Name Description string fileName 文档名 Returns Type Description string 存档文件名字"
  },
  "api/MilitaryGame.MapEditor.LoadPanel.html": {
    "href": "api/MilitaryGame.MapEditor.LoadPanel.html",
    "title": "Class LoadPanel | 兵棋项目API文档",
    "keywords": "Class LoadPanel 加载面板 Inheritance object LoadPanel Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class LoadPanel : MonoBehaviour Methods LoadFromFile() 负责加载文件并处理视图对象。 Declaration public void LoadFromFile()"
  },
  "api/MilitaryGame.MapEditor.MapData.html": {
    "href": "api/MilitaryGame.MapEditor.MapData.html",
    "title": "Class MapData | 兵棋项目API文档",
    "keywords": "Class MapData 整个地图的数据结构 Inheritance object MapData Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class MapData Fields time 地图创建时间 Declaration public DateTime time Field Value Type Description DateTime Properties height 地图高度 Declaration public int height { get; set; } Property Value Type Description int int mapHexElements 每个格子的数据 Declaration public MapHexElement[,] mapHexElements { get; set; } Property Value Type Description MapHexElement[,] MapHexElement[,] width 地图宽度 Declaration public int width { get; set; } Property Value Type Description int int"
  },
  "api/MilitaryGame.MapEditor.MapManager.html": {
    "href": "api/MilitaryGame.MapEditor.MapManager.html",
    "title": "Class MapManager | 兵棋项目API文档",
    "keywords": "Class MapManager 地图管理器 Inheritance object MapManager Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class MapManager : MonoSingleton<MapManager> Fields hasRouteGrid 没用，先放着 Declaration public HashSet<GameObject> hasRouteGrid Field Value Type Description System.Collections.Generic.HashSet<T><GameObject> hexGrid 存放地图上的所有“六角格”的游戏物体 Declaration public GameObject[,] hexGrid Field Value Type Description GameObject[,] mapHeight 地图高度 Declaration public int mapHeight Field Value Type Description int mapWidth 地图宽度 Declaration public int mapWidth Field Value Type Description int saveLoadSystem 保存加载系统 Declaration public SaveLoadSystem saveLoadSystem Field Value Type Description SaveLoadSystem Methods CreateMap(int, int) 创建地图 Declaration public void CreateMap(int hor, int vert) Parameters Type Name Description int hor 地图长度 int vert 地图宽度 DeleteMap() 删除地图 Declaration public void DeleteMap() GetHexPosition(int, int) 输入参数行列坐标（i，j），输出该格子相对于地图的坐标 Declaration public Vector3 GetHexPosition(int i, int j) Parameters Type Name Description int i x int j y Returns Type Description Vector3 Vector3地图坐标"
  },
  "api/MilitaryGame.MapEditor.MapViewContent.html": {
    "href": "api/MilitaryGame.MapEditor.MapViewContent.html",
    "title": "Class MapViewContent | 兵棋项目API文档",
    "keywords": "Class MapViewContent 加载面板的显示地图信息的地方 Inheritance object MapViewContent Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class MapViewContent : MonoBehaviour Fields button 本体是一个按钮，按下后代表加载这个地图 Declaration public Button button Field Value Type Description Button Name 地图名字 Declaration public TextMeshProUGUI Name Field Value Type Description TextMeshProUGUI size 地图大小 Declaration public TextMeshProUGUI size Field Value Type Description TextMeshProUGUI time 地图创建时间 Declaration public TextMeshProUGUI time Field Value Type Description TextMeshProUGUI Methods UpdateView(string) 更新地图信息 Declaration public void UpdateView(string inf) Parameters Type Name Description string inf 从索引文件中提取的信息"
  },
  "api/MilitaryGame.MapEditor.RiverPanel.html": {
    "href": "api/MilitaryGame.MapEditor.RiverPanel.html",
    "title": "Class RiverPanel | 兵棋项目API文档",
    "keywords": "Class RiverPanel Inheritance object RiverPanel Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class RiverPanel : MonoBehaviour Fields selectedHex 选中的格子 Declaration public HexGrid selectedHex Field Value Type Description HexGrid selectedRiverType 当前选中添加的河流类型 Declaration public RiverType selectedRiverType Field Value Type Description RiverType"
  },
  "api/MilitaryGame.MapEditor.Route.html": {
    "href": "api/MilitaryGame.MapEditor.Route.html",
    "title": "Class Route | 兵棋项目API文档",
    "keywords": "Class Route 道路的组件 Inheritance object Route Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class Route : MonoBehaviour Fields isAdjacentRouteCovered 有没有建通向邻边格子的路 Declaration public bool[] isAdjacentRouteCovered Field Value Type Description bool[] isRouteCovered 这个格子是否建了路 Declaration public bool isRouteCovered Field Value Type Description bool isWideRoad 是否为大路 Declaration public bool isWideRoad Field Value Type Description bool routePrefab 路的预制体 Declaration public GameObject routePrefab Field Value Type Description GameObject thisGrid 路所在的格子引用 Declaration public HexGrid thisGrid Field Value Type Description HexGrid Methods Create(GridDirection) 创建此格的路,只更新数据，显示更新在UpdateView Declaration public void Create(GridDirection dir) Parameters Type Name Description GridDirection dir Destroy() 摧毁该格子上的路 Declaration public void Destroy() Switch() 切换大/小路 Declaration public void Switch() UpdateView() 道路显示更新 Declaration public void UpdateView()"
  },
  "api/MilitaryGame.MapEditor.RoutePanel.html": {
    "href": "api/MilitaryGame.MapEditor.RoutePanel.html",
    "title": "Class RoutePanel | 兵棋项目API文档",
    "keywords": "Class RoutePanel 道路面板 Inheritance object RoutePanel Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class RoutePanel : MonoBehaviour Fields createRouteBtn 创建道路的按钮 Declaration public Button createRouteBtn Field Value Type Description Button destroyRouteBtn 摧毁道路的按钮 Declaration public Button destroyRouteBtn Field Value Type Description Button switchRouteBtn 切换大/小路的按钮 Declaration public Button switchRouteBtn Field Value Type Description Button"
  },
  "api/MilitaryGame.MapEditor.SaveLoadSystem.html": {
    "href": "api/MilitaryGame.MapEditor.SaveLoadSystem.html",
    "title": "Class SaveLoadSystem | 兵棋项目API文档",
    "keywords": "Class SaveLoadSystem 保存加载系统 Inheritance object SaveLoadSystem Implements ISaveLoadSystem Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class SaveLoadSystem : ISaveLoadSystem Methods Load(MapData) Declaration public bool Load(MapData mapData) Parameters Type Name Description MapData mapData Returns Type Description bool Save(string) Declaration public string Save(string fileName = \"\") Parameters Type Name Description string fileName Returns Type Description string Implements ISaveLoadSystem"
  },
  "api/MilitaryGame.MapEditor.SavePanel.html": {
    "href": "api/MilitaryGame.MapEditor.SavePanel.html",
    "title": "Class SavePanel | 兵棋项目API文档",
    "keywords": "Class SavePanel 保存面板 Inheritance object SavePanel Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class SavePanel : MonoBehaviour Fields button 保存按钮 Declaration public Button button Field Value Type Description Button inputField 输入的文本框 Declaration public TMP_InputField inputField Field Value Type Description TMP_InputField Methods SaveMap() 保存当前地图状态 Declaration public void SaveMap()"
  },
  "api/MilitaryGame.MapEditor.TerrainController.html": {
    "href": "api/MilitaryGame.MapEditor.TerrainController.html",
    "title": "Class TerrainController | 兵棋项目API文档",
    "keywords": "Class TerrainController 地形控制 Inheritance object TerrainController Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class TerrainController : MonoBehaviour Fields thisGrid 所在的格子 Declaration public HexGrid thisGrid Field Value Type Description HexGrid Methods SetTerrain(TerrainType, bool) 设置地形 Declaration public void SetTerrain(TerrainType terrain, bool isLoad) Parameters Type Name Description TerrainType terrain 地形 bool isLoad 是否为加载时调用"
  },
  "api/MilitaryGame.MapEditor.TerrainPanel.html": {
    "href": "api/MilitaryGame.MapEditor.TerrainPanel.html",
    "title": "Class TerrainPanel | 兵棋项目API文档",
    "keywords": "Class TerrainPanel 地形面板 Inheritance object TerrainPanel Namespace: MilitaryGame.MapEditor Assembly: cs.temp.dll.dll Syntax public class TerrainPanel : MonoBehaviour Fields deepForestBtn 深林 Declaration public Button deepForestBtn Field Value Type Description Button forestBtn 森林 Declaration public Button forestBtn Field Value Type Description Button hillBtn 山地 Declaration public Button hillBtn Field Value Type Description Button plainBtn 平原 Declaration public Button plainBtn Field Value Type Description Button recoverBtn 重置 Declaration public Button recoverBtn Field Value Type Description Button Methods SetTerrain(TerrainType) 平原1，山2，小森林3，大森林4，小河流5，大河流6 Declaration public void SetTerrain(TerrainType terrain) Parameters Type Name Description TerrainType terrain"
  },
  "api/MilitaryGame.MapHexElement.html": {
    "href": "api/MilitaryGame.MapHexElement.html",
    "title": "Class MapHexElement | 兵棋项目API文档",
    "keywords": "Class MapHexElement 把一个六角格的地形、建筑、河流、道路等信息展示出来 Inheritance object MapHexElement Namespace: MilitaryGame Assembly: cs.temp.dll.dll Syntax public class MapHexElement Fields sideRiverDic 记录相邻格子的六边有无河流 Declaration public Dictionary<GridDirection, RiverType> sideRiverDic Field Value Type Description System.Collections.Generic.Dictionary<TKey, TValue><GridDirection, RiverType> Remarks TKey GridDirection枚举 TValue RiverType枚举 Properties construction 建筑 Declaration public int construction { get; set; } Property Value Type Description int int isAdjacentRouteCovered 有无通向周边的路 Declaration public bool[] isAdjacentRouteCovered { get; set; } Property Value Type Description bool[] isRouteCovered 这个格子是否建了路 Declaration public bool isRouteCovered { get; set; } Property Value Type Description bool isWideRoad 是否为大路 Declaration public bool isWideRoad { get; set; } Property Value Type Description bool position 相对坐标 Declaration public Vector2Int position { get; set; } Property Value Type Description Vector2Int Vector2Int terrain 地形类型 Declaration public TerrainType terrain { get; set; } Property Value Type Description TerrainType TerrainType"
  },
  "api/MilitaryGame.River.html": {
    "href": "api/MilitaryGame.River.html",
    "title": "Class River | 兵棋项目API文档",
    "keywords": "Class River 河流模块 Inheritance object River Namespace: MilitaryGame Assembly: cs.temp.dll.dll Syntax public class River : MonoBehaviour Fields sideRiverDic 记录相邻格子的六边有无河流 Declaration public Dictionary<GridDirection, RiverType> sideRiverDic Field Value Type Description System.Collections.Generic.Dictionary<TKey, TValue><GridDirection, RiverType> Remarks TKey GridDirection枚举 TValue RiverType枚举 thisGrid 所附属的格子 Declaration public HexGrid thisGrid Field Value Type Description HexGrid Methods SetRiver(GridDirection, RiverType) 确定设置河流 Declaration public void SetRiver(GridDirection direction, RiverType selectedRiverType) Parameters Type Name Description GridDirection direction 方向 RiverType selectedRiverType 河流类型 UpdateRiverView() 更改河流显示 Declaration public void UpdateRiverView()"
  },
  "api/MilitaryGame.RiverType.html": {
    "href": "api/MilitaryGame.RiverType.html",
    "title": "Enum RiverType | 兵棋项目API文档",
    "keywords": "Enum RiverType 河流类型 Namespace: MilitaryGame Assembly: cs.temp.dll.dll Syntax public enum RiverType Fields Name Description GRiver MRiver NULLType"
  },
  "api/MilitaryGame.SelectedData.html": {
    "href": "api/MilitaryGame.SelectedData.html",
    "title": "Class SelectedData | 兵棋项目API文档",
    "keywords": "Class SelectedData 被选中的格子的数据存储单例 Inheritance object SelectedData Namespace: MilitaryGame Assembly: cs.temp.dll.dll Syntax public class SelectedData Fields selectedHex 被选中的单个格子 Declaration public HexGrid selectedHex Field Value Type Description HexGrid Properties Instance Declaration public static SelectedData Instance { get; } Property Value Type Description SelectedData"
  },
  "api/MilitaryGame.TerrainType.html": {
    "href": "api/MilitaryGame.TerrainType.html",
    "title": "Enum TerrainType | 兵棋项目API文档",
    "keywords": "Enum TerrainType 地形 Namespace: MilitaryGame Assembly: cs.temp.dll.dll Syntax public enum TerrainType Fields Name Description DForest Forest Hill None Plain"
  },
  "api/QFramework.html": {
    "href": "api/QFramework.html",
    "title": "Namespace QFramework | 兵棋项目API文档",
    "keywords": "Namespace QFramework Classes MonoSingleton<T> MonoSingletonPathAttribute MonoSingletonProperty<T> PersistentMonoSingleton<T> ReplaceableMonoSingleton<T> ScriptableSingletonProperty<T> Singleton<T> SingletonProperty<T> Interfaces ISingleton 单例接口"
  },
  "api/QFramework.ISingleton.html": {
    "href": "api/QFramework.ISingleton.html",
    "title": "Interface ISingleton | 兵棋项目API文档",
    "keywords": "Interface ISingleton 单例接口 Namespace: QFramework Assembly: cs.temp.dll.dll Syntax public interface ISingleton Methods OnSingletonInit() 单例初始化(继承当前接口的类都需要实现该方法) Declaration void OnSingletonInit()"
  },
  "api/QFramework.MonoSingleton-1.html": {
    "href": "api/QFramework.MonoSingleton-1.html",
    "title": "Class MonoSingleton<T> | 兵棋项目API文档",
    "keywords": "Class MonoSingleton<T> Inheritance object MonoSingleton<T> Implements ISingleton Namespace: QFramework Assembly: cs.temp.dll.dll Syntax public abstract class MonoSingleton<T> : MonoBehaviour, ISingleton where T : MonoSingleton<T> Type Parameters Name Description T Fields mInstance 静态实例 Declaration protected static T mInstance Field Value Type Description T Properties Instance 静态属性：封装相关实例对象 Declaration public static T Instance { get; } Property Value Type Description T Methods Dispose() 资源释放 Declaration public virtual void Dispose() OnApplicationQuit() 应用程序退出：释放当前对象并销毁相关GameObject Declaration protected virtual void OnApplicationQuit() OnDestroy() 释放当前对象 Declaration protected virtual void OnDestroy() OnSingletonInit() 实现接口的单例初始化 Declaration public virtual void OnSingletonInit() Implements ISingleton"
  },
  "api/QFramework.MonoSingletonPathAttribute.html": {
    "href": "api/QFramework.MonoSingletonPathAttribute.html",
    "title": "Class MonoSingletonPathAttribute | 兵棋项目API文档",
    "keywords": "Class MonoSingletonPathAttribute Inheritance object MonoSingletonPathAttribute Namespace: QFramework Assembly: cs.temp.dll.dll Syntax public class MonoSingletonPathAttribute : Attribute Constructors MonoSingletonPathAttribute(string) Declaration public MonoSingletonPathAttribute(string pathInHierarchy) Parameters Type Name Description string pathInHierarchy Properties PathInHierarchy Declaration public string PathInHierarchy { get; } Property Value Type Description string"
  },
  "api/QFramework.MonoSingletonProperty-1.html": {
    "href": "api/QFramework.MonoSingletonProperty-1.html",
    "title": "Class MonoSingletonProperty<T> | 兵棋项目API文档",
    "keywords": "Class MonoSingletonProperty<T> Inheritance object MonoSingletonProperty<T> Namespace: QFramework Assembly: cs.temp.dll.dll Syntax public static class MonoSingletonProperty<T> where T : MonoBehaviour, ISingleton Type Parameters Name Description T Properties Instance Declaration public static T Instance { get; } Property Value Type Description T Methods Dispose() Declaration public static void Dispose()"
  },
  "api/QFramework.PersistentMonoSingleton-1.html": {
    "href": "api/QFramework.PersistentMonoSingleton-1.html",
    "title": "Class PersistentMonoSingleton<T> | 兵棋项目API文档",
    "keywords": "Class PersistentMonoSingleton<T> Inheritance object PersistentMonoSingleton<T> Namespace: QFramework Assembly: cs.temp.dll.dll Syntax public abstract class PersistentMonoSingleton<T> : MonoBehaviour where T : Component Type Parameters Name Description T Fields mEnabled Declaration protected bool mEnabled Field Value Type Description bool mInstance Declaration protected static T mInstance Field Value Type Description T Properties Instance Declaration public static T Instance { get; } Property Value Type Description T Methods Awake() Declaration protected virtual void Awake()"
  },
  "api/QFramework.ReplaceableMonoSingleton-1.html": {
    "href": "api/QFramework.ReplaceableMonoSingleton-1.html",
    "title": "Class ReplaceableMonoSingleton<T> | 兵棋项目API文档",
    "keywords": "Class ReplaceableMonoSingleton<T> Inheritance object ReplaceableMonoSingleton<T> Namespace: QFramework Assembly: cs.temp.dll.dll Syntax public class ReplaceableMonoSingleton<T> : MonoBehaviour where T : Component Type Parameters Name Description T Fields InitializationTime Declaration public float InitializationTime Field Value Type Description float mInstance Declaration protected static T mInstance Field Value Type Description T Properties Instance Declaration public static T Instance { get; } Property Value Type Description T Methods Awake() Declaration protected virtual void Awake()"
  },
  "api/QFramework.ScriptableSingletonProperty-1.html": {
    "href": "api/QFramework.ScriptableSingletonProperty-1.html",
    "title": "Class ScriptableSingletonProperty<T> | 兵棋项目API文档",
    "keywords": "Class ScriptableSingletonProperty<T> Inheritance object ScriptableSingletonProperty<T> Namespace: QFramework Assembly: cs.temp.dll.dll Syntax public class ScriptableSingletonProperty<T> where T : ScriptableObject Type Parameters Name Description T Fields ScriptableLoader Declaration public static Func<string, T> ScriptableLoader Field Value Type Description Func<, ><string, T> Properties Instance Declaration public static T Instance { get; } Property Value Type Description T Methods Dispose() Declaration public static void Dispose() InstanceWithLoader(Func<string, T>) Declaration public static T InstanceWithLoader(Func<string, T> loader) Parameters Type Name Description Func<, ><string, T> loader Returns Type Description T"
  },
  "api/QFramework.Singleton-1.html": {
    "href": "api/QFramework.Singleton-1.html",
    "title": "Class Singleton<T> | 兵棋项目API文档",
    "keywords": "Class Singleton<T> Inheritance object Singleton<T> Implements ISingleton Namespace: QFramework Assembly: cs.temp.dll.dll Syntax public abstract class Singleton<T> : ISingleton where T : Singleton<T> Type Parameters Name Description T Fields mInstance 静态实例 Declaration protected static T mInstance Field Value Type Description T Properties Instance 静态属性 Declaration public static T Instance { get; } Property Value Type Description T Methods Dispose() 资源释放 Declaration public virtual void Dispose() OnSingletonInit() 单例初始化方法 Declaration public virtual void OnSingletonInit() Implements ISingleton"
  },
  "api/QFramework.SingletonProperty-1.html": {
    "href": "api/QFramework.SingletonProperty-1.html",
    "title": "Class SingletonProperty<T> | 兵棋项目API文档",
    "keywords": "Class SingletonProperty<T> Inheritance object SingletonProperty<T> Namespace: QFramework Assembly: cs.temp.dll.dll Syntax public static class SingletonProperty<T> where T : class, ISingleton Type Parameters Name Description T Properties Instance 静态属性 Declaration public static T Instance { get; } Property Value Type Description T Methods Dispose() 资源释放 Declaration public static void Dispose()"
  },
  "index.html": {
    "href": "index.html",
    "title": "兵棋项目 API 文档 | 兵棋项目API文档",
    "keywords": "兵棋项目 API 文档 这是兵棋所有函数的 API 文档 点击Manual会有一些相关的解释 点击Script API以查看全部 API。 2024 年 11 月 27 日更新"
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "搜索 | 兵棋项目API文档",
    "keywords": "搜索 目前只支持全字匹配搜索 要是有什么不知道有没有实现的代码就在这查吧"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "命名空间解释 | 兵棋项目API文档",
    "keywords": "命名空间解释 MilitaryGame 所有的本项目的自己写的脚本都应当包含在此命名空间内。 MapEditor 有关于地图编辑器的脚本 Global 未添加命名空间的脚本 QFramework QFramework 的命名空间，只是引入了该框架的单例泛型工具，以后可以随时删除"
  }
}